import {SignedIn, SignedOut, UserButton, useUser} from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import { SignInButton } from "@clerk/nextjs";
import { type RouterOutputs, api } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const {user} = useUser();
  
  console.log(user);

  if (!user)
    return null;
  
  return <div className="flex w-full gap-3">
    <Image src={user.profileImageUrl} 
          alt="Profile image" 
          className="w-14 h-14 rounded-full" 
          width={56}
          height={56}
        />
    <input placeholder="Type some emojis!" className="grow bg-transparent outline-none"/>
  </div> 
 }

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
 
const PostView = (props: PostWithUser) => {
  const {post, author} = props;
  return (
    <div key={post.id} className="flex border-b border-slate-400 p-4 gap-3"> 
      <Image 
        src={author.profileImageUrl} 
        className="w-14 h-14 rounded-full"
        alt={`@${author.username}'s profile picture`}
        width={56}
        height={56}
        />
      <div className="flex flex-col">
        <div className="flex gap-1 font-bold text-slate-300">
          <span>{`@${author.username}`}</span> 
          <span className="font-thin">{` Â· ${dayjs(post.createdAt).fromNow()}`}</span>
        </div> 
        <span>{post.content}</span>
      </div>
    </div>
  ); 
}

const Home: NextPage = () => {
  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) 
    return <div>Loading...</div>;
  if (!data) 
    return <div>Something went wrong</div>;

  console.log(data);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-slate-400 border-x md:max-w-2xl">
          <div className="flex border-b border-slate-400 p-4">
            <SignedIn>
              {/* Mount the UserButton component */}
              <CreatePostWizard />
              <div className="fixed bottom-0 right-0">
                <UserButton />
              </div>
            </SignedIn>
            <SignedOut>
              {/* Signed out users get sign in button */}
              <SignInButton />
            </SignedOut>
          </div>
          {/* Content */}
          <div className="flex flex-col">
            {[...data, ...data]?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id}/>
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
